@*Страница выбора продуктов.*@
@{
	Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
	.searchPanel {
		padding: 0 0 10px 0;
	}
	
	.product-cell{
		height: 180px!important;   
	}

	.product-title {
		height: 80px !important;
	}

	.loader {
		text-align: center;
	}

	.in-basket {
		color: green!important;
		box-sizing: border-box;
		padding: 0 5px 0 5px;
	}

	.image {
		padding: 10px;
		width: 120px;
		height: 120px;
	}

	.product-info {
		height: 120px;
	}

	.button-buy {
		padding: 5px;
		float: right;
	}
	
	.price {
		padding: 10px;
		font-weight: bold;
		font-size: 1.5em;
	}

	#buy-block{
		width: 100%;
		overflow: hidden;
	}

		#buy-block > div {
		width: 30%;
		display: inline-block;
	}
</style>

<div id="mainPanel">
	<div class="ui-grid">
		<div class="ui-grid-row">
			<div class="ui-grid-col-10">
			</div>
		</div>
		<div class="ui-grid-row">
			<div class="ui-grid-col-2">
				<div class="ui-grid-col-2">
					<ul id="pm1">
						<li><h3>Товары</h3></li>
						<li><a onClick="ShowcaseScript.productTypeChanged(-1);">Все товары</a></li>
						@foreach (var item in (List<KeyValuePair<int,string>>)ViewData["ProductTypes"])
						{
							<li><a onClick="ShowcaseScript.productTypeChanged(@item.Key);">@item.Value</a></li>
						}
					</ul>
				</div>
			</div>
			<div class="ui-grid-col-10">
				<div class="searchPanel">
					<input id="searchInput" type="text"/>
					<button id="searchButton" type="button">Поиск</button>
				</div>
				<div id="loaderIndicator" class="loader"><img src="/images/loader.gif"/>Загрузка данных...</div>
				<div id="tbProductList"></div>
				<div id="productsPaginator"></div>
				<label id="recordCountInfo"></label>
				<div id="localgrid"></div>
			</div>
		</div>
	</div>
</div>


<script type="text/javascript">
$(document).ready(function() {
	ShowcaseScript.init();
});

@*Витрина магазина.*@
const ShowcaseScript = {
	firstPageIndex: 1,

	currentPage: 1,
	
	searchText: '',

	productTypeId: -1,
	
	searchParam() {
			return { currentPage: this.currentPage, searchText: this.searchText, productTypeId: this.productTypeId};
	},
	
	setCurrentPage(page) {
		this.currentPage = page;
	},
		
	init() {
			$('#pm1').puimenu();
		$('#mainPanel').puipanel();
		$('#searchInput').puiinputtext();

		$('#tbProductList').puidatagrid({
			header: 'Список товаров',
			datasource: function(callback) {
				$.ajax({
					type: "GET",
					url: '@Url.Action("GetProductList", "ProductList")',
					data: ShowcaseScript.searchParam(),
					dataType: "json",
					beforeSend: function() {
						$('#loaderIndicator').show();
					},
					error: function(error) {
						$('#loaderIndicator').hide();

						CommonScript.showMessage('error', 'Ошибка', 'Ошибка получения данных.');
					},
					context: this,
					success: function(response) {
						$('#loaderIndicator').hide();
						callback.call(this, response);
					}
				});
			},
			content: function(product) {
				return ShowcaseScript.createProductCell(product);
			}
		});

		$('#searchButton').puibutton({
			click: function(event) {
				ShowcaseScript.searchByText($('#searchInput').val());
			}
		});

		$("#searchInput").on('keyup', function (e) {
			if (e.key === 'Enter' || e.keyCode === 13) {
				ShowcaseScript.searchByText($('#searchInput').val());
			}
		});

		$('#productsPaginator').puipaginator({
			paginate: function(event, state) {
				ShowcaseScript.setCurrentPage(state.page + 1);
				$('#tbProductList').puidatagrid('reload');
			}
		});

		this.updatePaginator();
	},
	
	@*Обновляет данные пейдженатора-количество строк и страниц.*@
	updatePaginator() {
		$.ajax({
			type: "GET",
			url: '/ProductList/GetPaginateData',
			data: ShowcaseScript.searchParam(),
			dataType: "json",
			error: function (error) {
				console.log(error);
			},
			context: this,
			success: function (response) {
				$('#recordCountInfo').text(`Найдено ${response.totalRecords} товаров`);
				$('#productsPaginator').puipaginator({
					totalRecords: response.totalRecords,
					rows: response.rows 
				});

				$('#productsPaginator').puipaginator('setState', { totalRecords: response.totalRecords, page:0 });
			}
		});
	},
	
	@*Поиск по названию товара. like*@
	searchByText(text) {
		ShowcaseScript.currentPage = 1;
		ShowcaseScript.searchText = text;
		ShowcaseScript.updateProductList();
	},

	updateProductList() {
		$('#tbProductList').puidatagrid('reload');
		this.updatePaginator();
	},

	@*Фильтр по типам продуктов.*@
	productTypeChanged(typeId) {
		ShowcaseScript.productTypeId = typeId;
		this.updateProductList();
	},

	@*Купить товар.*@
	buy(productId, productName, cost, imageName) {
		
		$('#bay' + productId).text('В корзине');
		$('#bay' + productId).addClass('in-basket');

		let product = { id: productId, name: productName, cost: cost, imageName: imageName };
		CommonScript.readLastBasketIfEmpty(); @*Если перейти в магазин корзина очистится – считываем сохраненное значение(если не корзина пуста).*@
		CommonScript.basket.push(product);
		CommonScript.setBasketToLocal();

		CommonScript.showMessage('info', 'Корзина', `Товар ${productName} добавлен в корзину.`);
	},

	@*html отображаемой ячейки.*@
	createProductCell(product) {
		@*переделать на шаблон!!!*@
		let html = `<div class="ui-panel ui-widget ui-widget-content ui-corner-all product-cell">
						  <div class="product-info">
								<img align="left" src="/productImages/${product.imageName}" class="image">
							<div>${product.name}</div>									
						  </div>
						  <div id="buy-block">
								  <div class="price"> ${product.cost}&nbsp;₽</div>
								<div>В наличии: ${product.amount}</div>
								<div>
									<button id="buy${product.id}" type="button" onClick="ShowcaseScript.buy(${product.id}, '${product.name}', '${product.cost}', '${product.imageName}');"
									class="ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only button-buy">Купить</button>
								</div>					
						 </div>
					</div>`;

		return html;
	}
}
</script>
	 