@using GearShop
@using GearShop.Models
@using Newtonsoft.Json
@model List<GearShop.Models.Dto.Products.ProductDto>

<style>
	.padding {
		padding: 5px;
	}

	.order-title {
		padding: 10px;
		font-weight: bold;
		font-size: 1.5em;
	}

	#сreateOrderBlock {
		padding: 5px 0 0 0;
		text-align: right;
	}
</style>

<div class="ui-grid ui-grid-responsive">
	<div class="ui-grid-row padding order-title">
		Оформление заказа на сумму: @ViewBag.TotalAmount Р.
	</div>
	<div class="ui-grid-row padding">
		<div class="ui-grid-col-12">
			<div id="errorMessageControl"></div>
		</div>
	</div>
	<div class="ui-grid-row padding">
		<div class="ui-grid-col-2">
			Ваше имя
		</div>
		<div class="ui-grid-col-10">
			<input id="buyerName" type="text"/>
		</div>
	</div>
	<div class="ui-grid-row padding">
		<div class="ui-grid-col-2">
			Номер телефона
		</div>
		<div class="ui-grid-col-10">
			<input id="buyerPhone" type="text"/>
		</div>
	</div>
	<div class="ui-grid-row padding">
		<div class="ui-grid-col-2">
			Електронная почта
		</div>
		<div class="ui-grid-col-10">
			<input id="buyerEmail" type="text"/>
		</div>
	</div>
	<div class="ui-grid-row padding">
		<div class="ui-grid-col-2">
		</div>
		<div class="ui-grid-col-10">
			На почту прийдет письмо
		</div>
	</div>
</div>
<div id="сreateOrderBlock">
	<button id="btnCheckout" type="button">Оформить заказ</button>
</div>
<div id="tbProducts" style="margin-top:20px"></div>

<script type="text/javascript">
$(document).ready(function() {
	CreateOrderScript.init();
});

const CreateOrderScript = {
	init() {
		$('#buyerName').puiinputtext();
		$('#buyerPhone').puiinputtext();
		$('#buyerEmail').puiinputtext();

		$('#btnCheckout').puibutton({
				icon: 'fa-shopping-cart',
				click: () => {
					CreateOrderScript.createOrder();
				}
		});

		$('#tbProducts').puidatatable({
			caption: 'Состав заказа',
			responsive: true,
			columns: [
				{ field: 'Name', headerText: 'Товар' },
				{ field: 'Amount', headerText: 'Количество' },
				{ field: 'Cost', headerText: 'Цена 1шт' },
			],
			datasource: this.data
		});
		
		$('#successDialog').puidialog({
			responsive: true
		});

		$('#errorMessageControl').puimessages();

		@*Сохраненный данные для компонентов ввода*@
		const userData = CommonScript.readUserDataFromStorage();
		if (userData != null) {
			$('#buyerName').val(userData.BuyerName);
			$('#buyerPhone').val(userData.BuyerPhone);
			$('#buyerEmail').val(userData.BuyerEmail);
		}

		CommonScript.synchronizeNoRegUserGuid(); @*Идентификатор не зарегистрированного пользователя*@
		CommonScript.getUserGuid(); @*Создаст новый идентификатор для не зарегистрированного пользователя.*@
	},

	ShowError(text) {
		$('#errorMessageControl').puimessages('show', 'error', { summary: '', detail: text });
	},

	@*Скрывает сообщение об ошибке.*@
	ClearMessage() {
		$('#errorMessageControl').puimessages('clear');
	},

	@*Валидация введенных данных.*@
	СheckInputData() {
		this.ClearMessage();

		if ($('#buyerName').val().length === 0) {
			this.ShowError('Введите имя');
			return false;
		}

		if ($('#buyerPhone').val().length === 0) {
			this.ShowError('Введите контактный телефон');
			return false;
		}
			
		return true;
	},
	data: @Html.Raw(JsonConvert.SerializeObject(Model)),
	createOrder() {
			if (!this.СheckInputData()) return;

			const orderInfo = 
			{
				BuyerName: $('#buyerName').val(),
				BuyerPhone: $('#buyerPhone').val(),
				BuyerEmail: $('#buyerEmail').val()
			};

			$.ajax({
				type: "POST",
				url: '@Url.Action("CreateOrder", "Order")',
				data: { model: this.data, orderInfo: orderInfo, userGuid: CommonScript.getUserGuid() },
				dataType: "json",
				error: function(error) {
					CommonScript.showMessage('error', 'Ошибка', 'Ошибка сохранения заказа.');
				},
				success: function(response) {
					CommonScript.saveUserDataToStorage(orderInfo);
					CommonScript.clearBasket();
					window.location = '@Url.Action("SuccessfulСreation", "Order")?' + $.param({ orderId: response });
				}
			});
	}
}
</script>