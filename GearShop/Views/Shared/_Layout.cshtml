@addTagHelper *, Wangkanai.Detection

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - Магазин запчастей</title>

	<link rel="stylesheet" type="text/css" href="~/font-awesome-4.7.0/css/font-awesome.css">
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" type="text/css" href="~/primeui/themes/aristo/theme.css">
    <link href="~/primeui/primeui-all.css" rel="stylesheet" type="text/css" />
</head>
<body>
<header>
	<nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3">
		<div class="container-fluid">
			<a class="navbar-brand" asp-area="" asp-controller="Home" asp-action="Index">Авто запчасти</a>
			<button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target=".navbar-collapse" aria-controls="navbarSupportedContent"
			        aria-expanded="false" aria-label="Toggle navigation">
				<span class="navbar-toggler-icon"></span>
			</button>
			<div class="navbar-collapse collapse d-sm-inline-flex justify-content-between">
				<ul class="navbar-nav flex-grow-1">
					<li class="nav-item">
						<a class="nav-link text-dark" asp-area="" asp-controller="Home" asp-action="Index">Главная</a>
					</li>
					<li class="nav-item">
						<a class="nav-link text-dark" asp-area="" asp-controller="ProductList" asp-action="Index">Магазин</a>
					</li>
					<li class="nav-item">
						<a class="nav-link text-dark" asp-controller="Basket" asp-action="Index">Корзина</a>
					</li>
					<li class="nav-item">
						<a class="nav-link text-dark" asp-area="" asp-controller="Login" asp-action="Authentication">Войти</a>
					</li>
				</ul>
			</div>
		</div>
	</nav>
</header>

<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
<script src="~/js/site.js" asp-append-version="true"></script>
<script src="~/primeui/primeui-all.js"></script>

<div class="container">
	<main role="main" class="pb-3">
		<div id="messageControl"></div>
		@RenderBody()
	</main>
    </div>

<footer class="border-top footer text-muted">
	<div class="container">
		&copy; 2023 - Магазин запчастей
	</div>
</footer>
	@await RenderSectionAsync("Scripts", required: false)
</body>
</html>

<script type="text/javascript">
$(document).ready(function() {
	CommonScript.Init();
});

@*Общий набор функций для всех страниц.*@
const CommonScript = {
		Init() {
			$('#messageControl').puigrowl(); @*Всплывающее сообщение*@
		},

		@*Отображает сообщение.*@
		showMessage(type, title, message) {
			const msg = ([{ severity: type, summary: title, detail: message }]);
			$('#messageControl').puigrowl('show', msg);
		},

		@*Ключ браузерного хранилища для  хранения уникального идентификатора
			не зарегистрированного пользователя.
		*@
		_storageUserGuidKey: 'gearShopNoRegisterUserGuid',
		@*Ключ корзины*@
		_storageBasketKey: 'gearShopBasket',

		@*Общая информация пользователя - имя, номер*@
		_storageUserDataKey: 'gearShopUserData',

		@*Возвращает уникальный идентификатор для не зарегистрированного пользователя. Из хранилищя его браузера.*@
		getUserGuidFromStorage() {
			return localStorage.getItem(CommonScript._storageUserGuidKey);
		},

		@*Сохраняет идентификатор не зарегистрированного пользователя в хранилище.*@
		saveUserGuidToStorage(guid) {
			localStorage.setItem(CommonScript._storageUserGuidKey, guid);
		},

		@*Идентификатор пользователя.*@
		userGuid: null,

		@*Возвращает уникальный идентификатор для не зарегистрированного пользователя, в его браузере.*@
		getUserGuid() {
		if (this.userGuid != null) return this.userGuid;

			let userGuid = CommonScript.getUserGuidFromStorage();
			if (userGuid != null) {
				CommonScript.userGuid = userGuid;
				return userGuid;
			}
		
			@*От сервера получаем новый идентификатор для не зарегистрированного пользователя.*@
			$.ajax({
				type: "GET",
				url: '@Url.Action("GetGuidFoNoRegistered", "User")',
				dataType: "json",
				beforeSend: function() {
				},
				error: function(error) {
					addMessage([{ severity: 'error', summary: 'Ошибка', detail: 'Ошибка получения данных.' }]);
				},
				success: function(response) {
					CommonScript.saveUserGuidToStorage(response.guid); @*Сохраняем в хранилище браузера пользователя*@
					CommonScript.userGuid = response.guid;
				
					return response.guid;
				}
			});
		},

		@*Синхронизирует уникальный идентификатор не зарегистрированного пользователя на стороне браузера и guid на стороне сервера. *@
		synchronizeNoRegUserGuid() {
			let userGuid = this.getUserGuidFromStorage();
			if (userGuid != null) return;
		
			@* Возможно удаление идентификатора в БД, проверяем наличие.
			  Если guid нет в БД – сервер его добавит.
			*@
			$.ajax({
				type: "GET",
				url: '@Url.Action("SynchronizeNoRegUserGuid", "User")',
				data: {guid: userGuid},
				beforeSend: function() {
				},
				error: function(error) {
					addMessage([{ severity: 'error', summary: 'Ошибка', detail: 'Ошибка получения данных.' }]);
				},
				success: function(response) {
				}
			});
		},

		@*Корзина*@
		basket: [],

		clearBasket() {
			this.basket = [];
			this.setBasketToLocal();
		},

		@*Сохраняет корзину в локальное хранилище(на стороне клиента)*@
		setBasketToLocal() {
			localStorage.setItem(CommonScript._storageBasketKey, JSON.stringify(CommonScript.basket));
		},

		getBacketFromStorage() {
			return localStorage.getItem(CommonScript._storageBasketKey);
		},

		@*Загружаетданные из хранилища если корзина пуста.*@
		readLastBasketIfEmpty() {
			if (CommonScript.basket.length == 0) {
				const basket = JSON.parse(this.getBacketFromStorage());
				if (basket == null) return;
				this.basket = basket;
			}
		},

		@*Конвертирует дату и время.*@
		convertDateTimeToString(dateTime) {
			const dt = new Date(dateTime);
			const padL = (nr, len = 2, chr = `0`) => `${nr}`.padStart(2, chr);

		  return `${padL(dt.getDate())}.${padL(dt.getMonth() + 1)}.${dt.getFullYear()} ${padL(dt.getHours())}:${
				padL(dt.getMinutes())}:${padL(dt.getSeconds())}`;
		},

		saveUserDataToStorage(data) {
			localStorage.setItem(this._storageUserDataKey, JSON.stringify(data));
		},

		readUserDataFromStorage() {
			const data = localStorage.getItem(this._storageUserDataKey);
			if (data == null) return null;

			return JSON.parse(data);
		},

		@*Является ли число целым?*@
		checkInteger(text) {
			const dig = parseInt(text);
			if (Number.isNaN(dig)) return false;

			return true;
		},

		@*Является ли число дробным?*@
		checkFloat(text) {
			const dig = parseFloat(text);
			if (Number.isNaN(dig)) return false;

		return true;
	}
}
</script>